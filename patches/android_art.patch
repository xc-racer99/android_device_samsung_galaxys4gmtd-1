From 7c6712c888ca339800d1c11c388bfbcbf053b2cc Mon Sep 17 00:00:00 2001
From: xc-racer99 <xc-racer2@live.ca>
Date: Tue, 15 Dec 2015 19:02:35 -0800
Subject: [PATCH] [2/2] art: Increase timeout for slow CPUs

Increase the ART timeout so large packages can still be compiled on very slow CPUs

Change-Id: Ic7b9d91a1bb57a199f81b2ac39b37676bd9dbe5f
---
 dex2oat/Android.mk | 4 ++++
 dex2oat/dex2oat.cc | 9 +++++++++
 2 files changed, 13 insertions(+)

diff --git a/dex2oat/Android.mk b/dex2oat/Android.mk
index 321cd75..75f1f67 100644
--- a/dex2oat/Android.mk
+++ b/dex2oat/Android.mk
@@ -21,6 +21,10 @@ include art/build/Android.executable.mk
 DEX2OAT_SRC_FILES := \
 	dex2oat.cc
 
+ifeq ($(TARGET_NEEDS_LONG_TIMEOUTS),true)
+  LOCAL_CFLAGS += -DNEEDS_LONG_TIMEOUTS=1
+endif
+
 # TODO: Remove this when the framework (installd) supports pushing the
 # right instruction-set parameter for the primary architecture.
 ifneq ($(filter ro.zygote=zygote64,$(PRODUCT_DEFAULT_PROPERTY_OVERRIDES)),)
diff --git a/dex2oat/dex2oat.cc b/dex2oat/dex2oat.cc
index 9d7e68a..5e7a3e6 100644
--- a/dex2oat/dex2oat.cc
+++ b/dex2oat/dex2oat.cc
@@ -433,10 +433,19 @@ class WatchDog {
   // Debug builds are slower so they have larger timeouts.
   static constexpr int64_t kSlowdownFactor = kIsDebugBuild ? 5U : 1U;
 
+#if NEEDS_LONG_TIMEOUTS
+  // 29.5 minutes scaled by kSlowdownFactor. This is slightly smaller than the Package Manager
+  // watchdog (PackageManagerService.WATCHDOG_TIMEOUT, 30 minutes), so that dex2oat will abort
+  // itself before that watchdog would take down the system server.
+
+  // Note that this timeout is only smaller when the timeout in frameworks/base is increased
+  static constexpr int64_t kWatchDogTimeoutSeconds = kSlowdownFactor * (29 * 60 + 30);
+#else
   // 9.5 minutes scaled by kSlowdownFactor. This is slightly smaller than the Package Manager
   // watchdog (PackageManagerService.WATCHDOG_TIMEOUT, 10 minutes), so that dex2oat will abort
   // itself before that watchdog would take down the system server.
   static constexpr int64_t kWatchDogTimeoutSeconds = kSlowdownFactor * (9 * 60 + 30);
+#endif
 
   bool is_watch_dog_enabled_;
   bool shutting_down_;
-- 
2.1.4

