From f915b444ec953028ae7a9cae8252d6d869e71239 Mon Sep 17 00:00:00 2001
From: AndDiSa <anddisa@googlemail.com>
Date: Fri, 27 Nov 2015 21:31:09 +0100
Subject: [PATCH] base: correct sensor handling

Older sensors are not setting event.timestamp correctly.  Setting to
true will use SystemClock.elapsedRealtimeNanos() to set timestamp

Change-Id: I2adfb9974d14afd4a5feef790cf847470c55aa5d
---
 core/res/res/values/custom_config.xml                        |  5 +++++
 core/res/res/values/custom_symbols.xml                       |  2 ++
 .../com/android/server/policy/WindowOrientationListener.java | 12 +++++++++++-
 3 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/core/res/res/values/custom_config.xml b/core/res/res/values/custom_config.xml
index 08d64ba..6ffb1ff 100644
--- a/core/res/res/values/custom_config.xml
+++ b/core/res/res/values/custom_config.xml
@@ -82,4 +82,9 @@
          policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
     -->
     <integer name="config_longPressOnMenuBehavior">0</integer>
+
+    <!-- Older sensors are not setting event.timestamp correctly.  Setting to
+          true will use SystemClock.elapsedRealtimeNanos() to set timestamp-->
+    <bool name="config_useSystemClockforSensors">false</bool>
+
 </resources>
diff --git a/core/res/res/values/custom_symbols.xml b/core/res/res/values/custom_symbols.xml
index 6ab0773..67deeab 100644
--- a/core/res/res/values/custom_symbols.xml
+++ b/core/res/res/values/custom_symbols.xml
@@ -78,4 +78,6 @@
   <java-symbol type="drawable" name="ic_audio_notification_mute_new" />
   <java-symbol type="drawable" name="ic_audio_notification_mute_alpha" />
   <java-symbol type="bool" name="config_enableScreenrecordChord" />
+
+  <java-symbol type="bool" name="config_useSystemClockforSensors" />
 </resources>
diff --git a/services/core/java/com/android/server/policy/WindowOrientationListener.java b/services/core/java/com/android/server/policy/WindowOrientationListener.java
index 9916223..b97c68e 100644
--- a/services/core/java/com/android/server/policy/WindowOrientationListener.java
+++ b/services/core/java/com/android/server/policy/WindowOrientationListener.java
@@ -56,6 +56,7 @@ public abstract class WindowOrientationListener {
     private int mRate;
     private String mSensorType;
     private Sensor mSensor;
+    private boolean museSystemClockforSensors;
     private OrientationJudge mOrientationJudge;
     private int mCurrentRotation = -1;
 
@@ -105,9 +106,13 @@ public abstract class WindowOrientationListener {
             }
         }
 
+        museSystemClockforSensors = context.getResources().getBoolean(
+                com.android.internal.R.bool.config_useSystemClockforSensors);
+
         if (mOrientationJudge == null) {
             mSensor = mSensorManager.getDefaultSensor(USE_GRAVITY_SENSOR
                     ? Sensor.TYPE_GRAVITY : Sensor.TYPE_ACCELEROMETER);
+
             if (mSensor != null) {
                 // Create listener only if sensors do exist
                 mOrientationJudge = new AccelSensorJudge(context);
@@ -598,7 +603,12 @@ public abstract class WindowOrientationListener {
                 // Reset the orientation listener state if the samples are too far apart in time
                 // or when we see values of (0, 0, 0) which indicates that we polled the
                 // accelerometer too soon after turning it on and we don't have any data yet.
-                final long now = event.timestamp;
+                final long now;
+                if (museSystemClockforSensors) {
+                    now = SystemClock.elapsedRealtimeNanos();
+                } else {
+                    now = event.timestamp;
+                }
                 final long then = mLastFilteredTimestampNanos;
                 final float timeDeltaMS = (now - then) * 0.000001f;
                 final boolean skipSample;
-- 
2.1.4

